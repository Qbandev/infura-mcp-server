name: Publish to npm

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
 
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if available)
        run: |
          if npm run | grep -q "test"; then
            npm test
          else
            echo "No test script found, skipping tests"
          fi
        continue-on-error: false

      - name: Verify package can be built
        run: |
          # Test that the server can start and list tools
          if command -v timeout >/dev/null 2>&1; then
            timeout 10s npm run list-tools || true
          else
            # Fallback for systems without timeout
            npm run list-tools &
            sleep 3
            kill $! 2>/dev/null || true
          fi
          echo "Package verification completed"

      - name: Check if version should be published
        id: check-version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          NPM_VERSION=$(npm view infura-mcp-server version 2>/dev/null || echo "0.0.0")
          echo "Package version: $PACKAGE_VERSION"
          echo "NPM version: $NPM_VERSION"
          if [ "$PACKAGE_VERSION" != "$NPM_VERSION" ]; then
            echo "should-publish=true" >> $GITHUB_OUTPUT
            echo "Version changed, will publish"
          else
            echo "should-publish=false" >> $GITHUB_OUTPUT
            echo "Version unchanged, skipping publish"
          fi
 
      - name: Publish to npm
        if: steps.check-version.outputs.should-publish == 'true' && matrix.node-version == '20'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release (if tag)
        if: startsWith(github.ref, 'refs/tags/v') && matrix.node-version == '20'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes in this version

            Please see the [CHANGELOG.md](./CHANGELOG.md) for detailed changes.

            ## Installation

            ```bash
            npm install -g infura-mcp-server
            # or
            npx infura-mcp-server
            ```

            ## What's Changed

            For a complete list of changes, see the commit history since the last release.
          draft: false
          prerelease: false 