name: Manual NPM Publish (Backup)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag to publish (e.g., v1.0.0)'
        required: true
        type: string
      npm_tag:
        description: 'NPM dist-tag (latest, beta, next)'
        required: false
        default: 'latest'
        type: string

jobs:
  # Security check - only allow repository owner to publish
  authorize:
    runs-on: ubuntu-latest
    outputs:
      authorized: ${{ steps.auth-check.outputs.authorized }}
    steps:
      - name: Check authorization
        id: auth-check
        run: |
          # Only allow repository owner or specified collaborators
          AUTHORIZED_USERS="Qbandev"
          REPO_OWNER="${{ github.repository_owner }}"
          ACTOR="${{ github.actor }}"

          echo "Repository owner: $REPO_OWNER"
          echo "Workflow actor: $ACTOR"
          echo "Authorized users: $AUTHORIZED_USERS"

          # Check if actor is repository owner
          if [ "$ACTOR" = "$REPO_OWNER" ]; then
            echo "✅ Authorized: Repository owner"
            echo "authorized=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check if actor is in authorized users list
          for user in $AUTHORIZED_USERS; do
            if [ "$ACTOR" = "$user" ]; then
              echo "✅ Authorized: Listed in authorized users"
              echo "authorized=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          # Not authorized
          echo "❌ Unauthorized: $ACTOR is not authorized to publish packages"
          echo "authorized=false" >> $GITHUB_OUTPUT
          exit 1

  publish:
    runs-on: ubuntu-latest
    needs: authorize
    if: needs.authorize.outputs.authorized == 'true'

    steps:
      - name: Checkout code at tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
 
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Verify tag matches package version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION="${{ github.event.inputs.tag }}"
          TAG_VERSION=${TAG_VERSION#v}  # Remove 'v' prefix if present
          
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ Error: Package version ($PACKAGE_VERSION) doesn't match tag ($TAG_VERSION)"
            exit 1
          fi
          
          echo "✅ Version verified: $PACKAGE_VERSION"

      - name: Run tests before publish
        env:
          INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
        run: npm test
        continue-on-error: false

      - name: Check if already published
        id: check-published
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          NPM_VERSION=$(npm view infura-mcp-server@$PACKAGE_VERSION version 2>/dev/null || echo "")
          
          if [ -n "$NPM_VERSION" ]; then
            echo "⚠️ Version $PACKAGE_VERSION already published to npm"
            echo "already-published=true" >> $GITHUB_OUTPUT
          else
            echo "✅ Version $PACKAGE_VERSION not yet published"
            echo "already-published=false" >> $GITHUB_OUTPUT
          fi
 
      - name: Publish to npm
        if: steps.check-published.outputs.already-published == 'false'
        run: npm publish --tag ${{ github.event.inputs.npm_tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Summary
        if: always()
        run: |
          echo "## 📦 Manual NPM Publish Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: ${{ github.event.inputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **NPM Tag**: ${{ github.event.inputs.npm_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check-published.outputs.already-published }}" == "true" ]; then
            echo "⚠️ **Status**: Version already published, skipped" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Status**: Published successfully" >> $GITHUB_STEP_SUMMARY
          fi