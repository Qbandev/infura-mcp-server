name: Security Scan

on:
  schedule:
    # Run security scans weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  push:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/security.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'package-lock.json'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          echo "Running npm audit..."
          npm audit --audit-level=moderate --json > audit-results.json || true
          
          # Check if there are any vulnerabilities
          VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.total')
          echo "Total vulnerabilities found: $VULNS"
          
          if [ "$VULNS" -gt 0 ]; then
            echo "❌ Security vulnerabilities found!"
            npm audit --audit-level=moderate
            exit 1
          else
            echo "✅ No security vulnerabilities found"
          fi

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: npm-audit-results
          path: audit-results.json



  secrets-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          extra_args: --debug --only-verified

  supply-chain-scan:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-package
          path: sbom.spdx.json

      - name: Scan SBOM with Grype
        uses: anchore/scan-action@v6
        with:
          sbom: sbom.spdx.json
          fail-build: true
          severity-cutoff: high

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, secrets-scan, supply-chain-scan]
    if: always()
    
    steps:
      - name: Generate Security Summary
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Scan | ${{ needs.dependency-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Scanning | ${{ needs.secrets-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Supply Chain | ${{ needs.supply-chain-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📝 **Note:** CodeQL analysis is handled by GitHub's default setup" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.dependency-scan.result }}" == "success" && 
                "${{ needs.secrets-scan.result }}" == "success" && 
                "${{ needs.supply-chain-scan.result }}" == "success" ]]; then
            echo "🎉 **All security scans passed!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Some security scans failed. Please review the results.**" >> $GITHUB_STEP_SUMMARY
          fi 